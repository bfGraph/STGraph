//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_61
.address_size 64

	// .globl	K4

.visible .entry K4(
	.param .u64 K4_param_0,
	.param .u64 K4_param_1,
	.param .u64 K4_param_2,
	.param .u64 K4_param_3,
	.param .u64 K4_param_4,
	.param .u64 K4_param_5,
	.param .u64 K4_param_6,
	.param .u64 K4_param_7,
	.param .u32 K4_param_8,
	.param .u32 K4_param_9,
	.param .u32 K4_param_10,
	.param .u32 K4_param_11,
	.param .u32 K4_param_12
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<88>;
	.reg .b64 	%rd<96>;
	.loc	1 1 0


	ld.param.u64 	%rd19, [K4_param_0];
	ld.param.u64 	%rd14, [K4_param_1];
	ld.param.u64 	%rd20, [K4_param_2];
	ld.param.u64 	%rd21, [K4_param_3];
	ld.param.u64 	%rd15, [K4_param_4];
	ld.param.u64 	%rd16, [K4_param_5];
	ld.param.u64 	%rd17, [K4_param_6];
	ld.param.u64 	%rd18, [K4_param_7];
	ld.param.u32 	%r37, [K4_param_8];
	ld.param.u32 	%r34, [K4_param_9];
	ld.param.u32 	%r35, [K4_param_10];
	ld.param.u32 	%r36, [K4_param_11];
	ld.param.u32 	%r38, [K4_param_12];
	.loc	1 12 16
	cvta.to.global.u64 	%rd1, %rd21;
	cvta.to.global.u64 	%rd2, %rd19;
	cvta.to.global.u64 	%rd3, %rd20;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r40, %r1, %r36;
	mad.lo.s32 	%r2, %r39, %r38, %r40;
	.loc	1 14 5
	setp.ge.s32 	%p1, %r2, %r37;
	@%p1 bra 	$L__BB0_25;

	.loc	1 16 22
	mul.lo.s32 	%r3, %r35, %r34;
	.loc	1 17 26
	mul.wide.s32 	%rd24, %r2, 4;
	add.s64 	%rd22, %rd16, %rd24;
	.loc	1 17 28
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 17 28
	// begin inline asm
	ld.global.nc.u32 %r41, [%rd22];
	// end inline asm
	.loc	1 18 26
	add.s64 	%rd23, %rd22, 4;
	.loc	1 18 28
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 18 28
	// begin inline asm
	ld.global.nc.u32 %r42, [%rd23];
	// end inline asm
	.loc	1 19 16
	rem.u32 	%r85, %r1, %r36;
	.loc	1 21 9
	setp.ge.s32 	%p2, %r85, %r3;
	@%p2 bra 	$L__BB0_25;

	.loc	1 0 9
	shl.b32 	%r7, %r2, 5;
	.loc	1 21 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 26 13
	not.b32 	%r43, %r41;
	add.s32 	%r9, %r42, %r43;
	sub.s32 	%r44, %r42, %r41;
	and.b32  	%r10, %r44, 3;
	mul.wide.s32 	%rd25, %r41, 8;
	add.s64 	%rd4, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r41, 4;
	add.s64 	%rd5, %rd17, %rd26;
	add.s32 	%r11, %r41, 1;
	add.s64 	%rd6, %rd4, 8;
	add.s64 	%rd7, %rd5, 4;
	add.s32 	%r12, %r41, 2;
	add.s64 	%rd8, %rd4, 16;
	add.s64 	%rd9, %rd5, 8;
	add.s32 	%r13, %r41, 3;
	.loc	1 12 16
	cvta.to.global.u64 	%rd10, %rd15;
	cvta.to.global.u64 	%rd11, %rd14;
	setp.le.u32 	%p3, %r42, %r41;
	mov.f32 	%f18, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p16, %r9, 3;
	setp.eq.s32 	%p8, %r10, 1;

$L__BB0_3:
	.loc	1 24 25
	shr.s32 	%r45, %r85, 31;
	shr.u32 	%r46, %r45, 27;
	add.s32 	%r47, %r85, %r46;
	shr.s32 	%r15, %r47, 5;
	.loc	1 26 13
	mov.f32 	%f57, %f18;
	@%p3 bra 	$L__BB0_24;

	.loc	1 38 17
	mov.u32 	%r86, %r41;
	mov.f32 	%f57, %f18;
	@%p4 bra 	$L__BB0_13;

	.loc	1 28 45
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	// begin inline asm
	ld.global.nc.u64 %rd27, [%rd4];
	// end inline asm
	.loc	1 32 36
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	// begin inline asm
	ld.global.nc.u32 %r48, [%rd5];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r16, %r48, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r17, %rd27;
	.loc	1 38 17
	setp.eq.s32 	%p5, %r17, -1;
	setp.eq.s32 	%p6, %r16, 0;
	mov.f32 	%f57, 0f00000000;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB0_7;

	.loc	1 39 33
	shl.b32 	%r49, %r17, 5;
	add.s32 	%r50, %r49, %r85;
	.loc	1 39 64
	add.s32 	%r51, %r15, %r17;
	.loc	1 43 35
	mul.wide.s32 	%rd30, %r51, 4;
	add.s64 	%rd31, %rd3, %rd30;
	mul.wide.s32 	%rd32, %r50, 4;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.f32 	%f22, [%rd33];
	ld.global.f32 	%f23, [%rd31];
	mul.f32 	%f24, %f23, %f22;
	.loc	1 39 97
	add.s32 	%r52, %r16, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd34, %r52, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.global.f32 	%f25, [%rd35];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f24, %f25, 0f00000000;

$L__BB0_7:
	.loc	1 26 13
	mov.u32 	%r86, %r11;
	@%p8 bra 	$L__BB0_13;

	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	// begin inline asm
	ld.global.nc.u64 %rd36, [%rd6];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	// begin inline asm
	ld.global.nc.u32 %r53, [%rd7];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r18, %r53, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r19, %rd36;
	.loc	1 38 17
	setp.eq.s32 	%p9, %r19, -1;
	setp.eq.s32 	%p10, %r18, 0;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_10;

	.loc	1 39 33
	shl.b32 	%r54, %r19, 5;
	add.s32 	%r55, %r54, %r85;
	.loc	1 39 64
	add.s32 	%r56, %r15, %r19;
	.loc	1 43 35
	mul.wide.s32 	%rd39, %r56, 4;
	add.s64 	%rd40, %rd3, %rd39;
	mul.wide.s32 	%rd41, %r55, 4;
	add.s64 	%rd42, %rd2, %rd41;
	ld.global.f32 	%f26, [%rd42];
	ld.global.f32 	%f27, [%rd40];
	mul.f32 	%f28, %f27, %f26;
	.loc	1 39 97
	add.s32 	%r57, %r18, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd43, %r57, 4;
	add.s64 	%rd44, %rd1, %rd43;
	ld.global.f32 	%f29, [%rd44];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f28, %f29, %f57;

$L__BB0_10:
	.loc	1 0 21
	setp.eq.s32 	%p12, %r10, 2;
	.loc	1 26 13
	mov.u32 	%r86, %r12;
	@%p12 bra 	$L__BB0_13;

	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	// begin inline asm
	ld.global.nc.u64 %rd45, [%rd8];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	// begin inline asm
	ld.global.nc.u32 %r58, [%rd9];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r20, %r58, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r21, %rd45;
	.loc	1 38 17
	setp.eq.s32 	%p13, %r21, -1;
	setp.eq.s32 	%p14, %r20, 0;
	or.pred  	%p15, %p13, %p14;
	mov.u32 	%r86, %r13;
	@%p15 bra 	$L__BB0_13;

	.loc	1 39 33
	shl.b32 	%r59, %r21, 5;
	add.s32 	%r60, %r59, %r85;
	.loc	1 39 64
	add.s32 	%r61, %r15, %r21;
	.loc	1 43 35
	mul.wide.s32 	%rd48, %r61, 4;
	add.s64 	%rd49, %rd3, %rd48;
	mul.wide.s32 	%rd50, %r60, 4;
	add.s64 	%rd51, %rd2, %rd50;
	ld.global.f32 	%f30, [%rd51];
	ld.global.f32 	%f31, [%rd49];
	mul.f32 	%f32, %f31, %f30;
	.loc	1 39 97
	add.s32 	%r62, %r20, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd52, %r62, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.f32 	%f33, [%rd53];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f32, %f33, %f57;
	mov.u32 	%r86, %r13;

$L__BB0_13:
	.loc	1 38 17
	@%p16 bra 	$L__BB0_24;

$L__BB0_15:
	.loc	1 28 43
	mul.wide.s32 	%rd57, %r86, 8;
	add.s64 	%rd55, %rd18, %rd57;
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	// begin inline asm
	ld.global.nc.u64 %rd54, [%rd55];
	// end inline asm
	.loc	1 32 34
	mul.wide.s32 	%rd58, %r86, 4;
	add.s64 	%rd56, %rd17, %rd58;
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd56];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r24, %r63, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r25, %rd54;
	.loc	1 38 17
	setp.eq.s32 	%p17, %r25, -1;
	setp.eq.s32 	%p18, %r24, 0;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB0_17;

	.loc	1 39 33
	shl.b32 	%r64, %r25, 5;
	add.s32 	%r65, %r64, %r85;
	.loc	1 39 64
	add.s32 	%r66, %r15, %r25;
	.loc	1 43 35
	mul.wide.s32 	%rd59, %r66, 4;
	add.s64 	%rd60, %rd3, %rd59;
	mul.wide.s32 	%rd61, %r65, 4;
	add.s64 	%rd62, %rd2, %rd61;
	ld.global.f32 	%f34, [%rd62];
	ld.global.f32 	%f35, [%rd60];
	mul.f32 	%f36, %f35, %f34;
	.loc	1 39 97
	add.s32 	%r67, %r24, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd63, %r67, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.f32 	%f37, [%rd64];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f36, %f37, %f57;

$L__BB0_17:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	add.s64 	%rd66, %rd55, 8;
	// begin inline asm
	ld.global.nc.u64 %rd65, [%rd66];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	add.s64 	%rd67, %rd56, 4;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd67];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r26, %r68, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r27, %rd65;
	.loc	1 38 17
	setp.eq.s32 	%p20, %r27, -1;
	setp.eq.s32 	%p21, %r26, 0;
	or.pred  	%p22, %p20, %p21;
	@%p22 bra 	$L__BB0_19;

	.loc	1 39 33
	shl.b32 	%r69, %r27, 5;
	add.s32 	%r70, %r69, %r85;
	.loc	1 39 64
	add.s32 	%r71, %r15, %r27;
	.loc	1 43 35
	mul.wide.s32 	%rd68, %r71, 4;
	add.s64 	%rd69, %rd3, %rd68;
	mul.wide.s32 	%rd70, %r70, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.f32 	%f38, [%rd71];
	ld.global.f32 	%f39, [%rd69];
	mul.f32 	%f40, %f39, %f38;
	.loc	1 39 97
	add.s32 	%r72, %r26, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd72, %r72, 4;
	add.s64 	%rd73, %rd1, %rd72;
	ld.global.f32 	%f41, [%rd73];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f40, %f41, %f57;

$L__BB0_19:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	add.s64 	%rd75, %rd55, 16;
	// begin inline asm
	ld.global.nc.u64 %rd74, [%rd75];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	add.s64 	%rd76, %rd56, 8;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd76];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r28, %r73, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r29, %rd74;
	.loc	1 38 17
	setp.eq.s32 	%p23, %r29, -1;
	setp.eq.s32 	%p24, %r28, 0;
	or.pred  	%p25, %p23, %p24;
	@%p25 bra 	$L__BB0_21;

	.loc	1 39 33
	shl.b32 	%r74, %r29, 5;
	add.s32 	%r75, %r74, %r85;
	.loc	1 39 64
	add.s32 	%r76, %r15, %r29;
	.loc	1 43 35
	mul.wide.s32 	%rd77, %r76, 4;
	add.s64 	%rd78, %rd3, %rd77;
	mul.wide.s32 	%rd79, %r75, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.f32 	%f42, [%rd80];
	ld.global.f32 	%f43, [%rd78];
	mul.f32 	%f44, %f43, %f42;
	.loc	1 39 97
	add.s32 	%r77, %r28, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd81, %r77, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.f32 	%f45, [%rd82];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f44, %f45, %f57;

$L__BB0_21:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 28 45
	add.s64 	%rd84, %rd55, 24;
	// begin inline asm
	ld.global.nc.u64 %rd83, [%rd84];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 32 36
	add.s64 	%rd85, %rd56, 12;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd85];
	// end inline asm
	.loc	1 32 36
	add.s32 	%r30, %r78, -1;
	.loc	1 35 40
	cvt.u32.u64 	%r31, %rd83;
	.loc	1 38 17
	setp.eq.s32 	%p26, %r31, -1;
	setp.eq.s32 	%p27, %r30, 0;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	$L__BB0_23;

	.loc	1 39 33
	shl.b32 	%r79, %r31, 5;
	add.s32 	%r80, %r79, %r85;
	.loc	1 39 64
	add.s32 	%r81, %r15, %r31;
	.loc	1 43 35
	mul.wide.s32 	%rd86, %r81, 4;
	add.s64 	%rd87, %rd3, %rd86;
	mul.wide.s32 	%rd88, %r80, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.f32 	%f46, [%rd89];
	ld.global.f32 	%f47, [%rd87];
	mul.f32 	%f48, %f47, %f46;
	.loc	1 39 97
	add.s32 	%r82, %r30, %r15;
	.loc	1 47 35
	mul.wide.s32 	%rd90, %r82, 4;
	add.s64 	%rd91, %rd1, %rd90;
	ld.global.f32 	%f49, [%rd91];
	.loc	1 52 21
	fma.rn.f32 	%f57, %f48, %f49, %f57;

$L__BB0_23:
	.loc	1 26 34
	add.s32 	%r86, %r86, 4;
	.loc	1 26 13
	setp.lt.u32 	%p29, %r86, %r42;
	@%p29 bra 	$L__BB0_15;

$L__BB0_24:
	.loc	1 24 25
	add.s32 	%r83, %r15, %r2;
	.loc	1 64 27
	mul.wide.s32 	%rd92, %r83, 4;
	add.s64 	%rd93, %rd11, %rd92;
	ld.global.f32 	%f50, [%rd93];
	mul.f32 	%f51, %f57, %f50;
	.loc	1 24 58
	add.s32 	%r84, %r85, %r7;
	.loc	1 65 13
	mul.wide.s32 	%rd94, %r84, 4;
	add.s64 	%rd95, %rd10, %rd94;
	st.global.f32 	[%rd95], %f51;
	.loc	1 21 29
	add.s32 	%r85, %r85, %r8;
	.loc	1 21 9
	setp.lt.s32 	%p30, %r85, %r3;
	@%p30 bra 	$L__BB0_3;

$L__BB0_25:
	.loc	1 69 1
	ret;

}
	// .globl	K5
.visible .entry K5(
	.param .u64 K5_param_0,
	.param .u64 K5_param_1,
	.param .u64 K5_param_2,
	.param .u64 K5_param_3,
	.param .u64 K5_param_4,
	.param .u64 K5_param_5,
	.param .u64 K5_param_6,
	.param .u64 K5_param_7,
	.param .u32 K5_param_8,
	.param .u32 K5_param_9,
	.param .u32 K5_param_10,
	.param .u32 K5_param_11,
	.param .u32 K5_param_12
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<88>;
	.reg .b64 	%rd<96>;
	.loc	1 69 0


	ld.param.u64 	%rd19, [K5_param_0];
	ld.param.u64 	%rd20, [K5_param_1];
	ld.param.u64 	%rd14, [K5_param_2];
	ld.param.u64 	%rd21, [K5_param_3];
	ld.param.u64 	%rd15, [K5_param_4];
	ld.param.u64 	%rd16, [K5_param_5];
	ld.param.u64 	%rd17, [K5_param_6];
	ld.param.u64 	%rd18, [K5_param_7];
	ld.param.u32 	%r37, [K5_param_8];
	ld.param.u32 	%r34, [K5_param_9];
	ld.param.u32 	%r35, [K5_param_10];
	ld.param.u32 	%r36, [K5_param_11];
	ld.param.u32 	%r38, [K5_param_12];
	.loc	1 80 16
	cvta.to.global.u64 	%rd1, %rd21;
	cvta.to.global.u64 	%rd2, %rd20;
	cvta.to.global.u64 	%rd3, %rd19;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r40, %r1, %r36;
	mad.lo.s32 	%r2, %r39, %r38, %r40;
	.loc	1 82 5
	setp.ge.s32 	%p1, %r2, %r37;
	@%p1 bra 	$L__BB1_25;

	.loc	1 84 22
	mul.lo.s32 	%r3, %r35, %r34;
	.loc	1 85 26
	mul.wide.s32 	%rd24, %r2, 4;
	add.s64 	%rd22, %rd16, %rd24;
	.loc	1 85 28
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 85 28
	// begin inline asm
	ld.global.nc.u32 %r41, [%rd22];
	// end inline asm
	.loc	1 86 26
	add.s64 	%rd23, %rd22, 4;
	.loc	1 86 28
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 86 28
	// begin inline asm
	ld.global.nc.u32 %r42, [%rd23];
	// end inline asm
	.loc	1 87 16
	rem.u32 	%r85, %r1, %r36;
	.loc	1 89 9
	setp.ge.s32 	%p2, %r85, %r3;
	@%p2 bra 	$L__BB1_25;

	.loc	1 0 9
	shl.b32 	%r7, %r2, 5;
	.loc	1 89 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 94 13
	not.b32 	%r43, %r41;
	add.s32 	%r9, %r42, %r43;
	sub.s32 	%r44, %r42, %r41;
	and.b32  	%r10, %r44, 3;
	mul.wide.s32 	%rd25, %r41, 8;
	add.s64 	%rd4, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r41, 4;
	add.s64 	%rd5, %rd17, %rd26;
	add.s32 	%r11, %r41, 1;
	add.s64 	%rd6, %rd4, 8;
	add.s64 	%rd7, %rd5, 4;
	add.s32 	%r12, %r41, 2;
	add.s64 	%rd8, %rd4, 16;
	add.s64 	%rd9, %rd5, 8;
	add.s32 	%r13, %r41, 3;
	.loc	1 80 16
	cvta.to.global.u64 	%rd10, %rd15;
	cvta.to.global.u64 	%rd11, %rd14;
	setp.le.u32 	%p3, %r42, %r41;
	mov.f32 	%f18, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p16, %r9, 3;
	setp.eq.s32 	%p8, %r10, 1;

$L__BB1_3:
	.loc	1 92 56
	shr.s32 	%r45, %r85, 31;
	shr.u32 	%r46, %r45, 27;
	add.s32 	%r47, %r85, %r46;
	shr.s32 	%r15, %r47, 5;
	.loc	1 94 13
	mov.f32 	%f57, %f18;
	@%p3 bra 	$L__BB1_24;

	.loc	1 106 17
	mov.u32 	%r86, %r41;
	mov.f32 	%f57, %f18;
	@%p4 bra 	$L__BB1_13;

	.loc	1 96 45
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	// begin inline asm
	ld.global.nc.u64 %rd27, [%rd4];
	// end inline asm
	.loc	1 100 36
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	// begin inline asm
	ld.global.nc.u32 %r48, [%rd5];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r16, %r48, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r17, %rd27;
	.loc	1 106 17
	setp.eq.s32 	%p5, %r17, -1;
	setp.eq.s32 	%p6, %r16, 0;
	mov.f32 	%f57, 0f00000000;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB1_7;

	.loc	1 107 33
	add.s32 	%r49, %r15, %r17;
	.loc	1 107 66
	shl.b32 	%r50, %r17, 5;
	add.s32 	%r51, %r50, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd30, %r51, 4;
	add.s64 	%rd31, %rd3, %rd30;
	mul.wide.s32 	%rd32, %r49, 4;
	add.s64 	%rd33, %rd2, %rd32;
	ld.global.f32 	%f22, [%rd33];
	ld.global.f32 	%f23, [%rd31];
	mul.f32 	%f24, %f23, %f22;
	.loc	1 107 97
	add.s32 	%r52, %r16, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd34, %r52, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.global.f32 	%f25, [%rd35];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f24, %f25, 0f00000000;

$L__BB1_7:
	.loc	1 94 13
	mov.u32 	%r86, %r11;
	@%p8 bra 	$L__BB1_13;

	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	// begin inline asm
	ld.global.nc.u64 %rd36, [%rd6];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	// begin inline asm
	ld.global.nc.u32 %r53, [%rd7];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r18, %r53, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r19, %rd36;
	.loc	1 106 17
	setp.eq.s32 	%p9, %r19, -1;
	setp.eq.s32 	%p10, %r18, 0;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB1_10;

	.loc	1 107 33
	add.s32 	%r54, %r15, %r19;
	.loc	1 107 66
	shl.b32 	%r55, %r19, 5;
	add.s32 	%r56, %r55, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd39, %r56, 4;
	add.s64 	%rd40, %rd3, %rd39;
	mul.wide.s32 	%rd41, %r54, 4;
	add.s64 	%rd42, %rd2, %rd41;
	ld.global.f32 	%f26, [%rd42];
	ld.global.f32 	%f27, [%rd40];
	mul.f32 	%f28, %f27, %f26;
	.loc	1 107 97
	add.s32 	%r57, %r18, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd43, %r57, 4;
	add.s64 	%rd44, %rd1, %rd43;
	ld.global.f32 	%f29, [%rd44];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f28, %f29, %f57;

$L__BB1_10:
	.loc	1 0 21
	setp.eq.s32 	%p12, %r10, 2;
	.loc	1 94 13
	mov.u32 	%r86, %r12;
	@%p12 bra 	$L__BB1_13;

	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	// begin inline asm
	ld.global.nc.u64 %rd45, [%rd8];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	// begin inline asm
	ld.global.nc.u32 %r58, [%rd9];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r20, %r58, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r21, %rd45;
	.loc	1 106 17
	setp.eq.s32 	%p13, %r21, -1;
	setp.eq.s32 	%p14, %r20, 0;
	or.pred  	%p15, %p13, %p14;
	mov.u32 	%r86, %r13;
	@%p15 bra 	$L__BB1_13;

	.loc	1 107 33
	add.s32 	%r59, %r15, %r21;
	.loc	1 107 66
	shl.b32 	%r60, %r21, 5;
	add.s32 	%r61, %r60, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd48, %r61, 4;
	add.s64 	%rd49, %rd3, %rd48;
	mul.wide.s32 	%rd50, %r59, 4;
	add.s64 	%rd51, %rd2, %rd50;
	ld.global.f32 	%f30, [%rd51];
	ld.global.f32 	%f31, [%rd49];
	mul.f32 	%f32, %f31, %f30;
	.loc	1 107 97
	add.s32 	%r62, %r20, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd52, %r62, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.f32 	%f33, [%rd53];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f32, %f33, %f57;
	mov.u32 	%r86, %r13;

$L__BB1_13:
	.loc	1 106 17
	@%p16 bra 	$L__BB1_24;

$L__BB1_15:
	.loc	1 96 43
	mul.wide.s32 	%rd57, %r86, 8;
	add.s64 	%rd55, %rd18, %rd57;
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	// begin inline asm
	ld.global.nc.u64 %rd54, [%rd55];
	// end inline asm
	.loc	1 100 34
	mul.wide.s32 	%rd58, %r86, 4;
	add.s64 	%rd56, %rd17, %rd58;
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd56];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r24, %r63, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r25, %rd54;
	.loc	1 106 17
	setp.eq.s32 	%p17, %r25, -1;
	setp.eq.s32 	%p18, %r24, 0;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB1_17;

	.loc	1 107 33
	add.s32 	%r64, %r15, %r25;
	.loc	1 107 66
	shl.b32 	%r65, %r25, 5;
	add.s32 	%r66, %r65, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd59, %r66, 4;
	add.s64 	%rd60, %rd3, %rd59;
	mul.wide.s32 	%rd61, %r64, 4;
	add.s64 	%rd62, %rd2, %rd61;
	ld.global.f32 	%f34, [%rd62];
	ld.global.f32 	%f35, [%rd60];
	mul.f32 	%f36, %f35, %f34;
	.loc	1 107 97
	add.s32 	%r67, %r24, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd63, %r67, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.f32 	%f37, [%rd64];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f36, %f37, %f57;

$L__BB1_17:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	add.s64 	%rd66, %rd55, 8;
	// begin inline asm
	ld.global.nc.u64 %rd65, [%rd66];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	add.s64 	%rd67, %rd56, 4;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd67];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r26, %r68, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r27, %rd65;
	.loc	1 106 17
	setp.eq.s32 	%p20, %r27, -1;
	setp.eq.s32 	%p21, %r26, 0;
	or.pred  	%p22, %p20, %p21;
	@%p22 bra 	$L__BB1_19;

	.loc	1 107 33
	add.s32 	%r69, %r15, %r27;
	.loc	1 107 66
	shl.b32 	%r70, %r27, 5;
	add.s32 	%r71, %r70, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd68, %r71, 4;
	add.s64 	%rd69, %rd3, %rd68;
	mul.wide.s32 	%rd70, %r69, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.f32 	%f38, [%rd71];
	ld.global.f32 	%f39, [%rd69];
	mul.f32 	%f40, %f39, %f38;
	.loc	1 107 97
	add.s32 	%r72, %r26, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd72, %r72, 4;
	add.s64 	%rd73, %rd1, %rd72;
	ld.global.f32 	%f41, [%rd73];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f40, %f41, %f57;

$L__BB1_19:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	add.s64 	%rd75, %rd55, 16;
	// begin inline asm
	ld.global.nc.u64 %rd74, [%rd75];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	add.s64 	%rd76, %rd56, 8;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd76];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r28, %r73, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r29, %rd74;
	.loc	1 106 17
	setp.eq.s32 	%p23, %r29, -1;
	setp.eq.s32 	%p24, %r28, 0;
	or.pred  	%p25, %p23, %p24;
	@%p25 bra 	$L__BB1_21;

	.loc	1 107 33
	add.s32 	%r74, %r15, %r29;
	.loc	1 107 66
	shl.b32 	%r75, %r29, 5;
	add.s32 	%r76, %r75, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd77, %r76, 4;
	add.s64 	%rd78, %rd3, %rd77;
	mul.wide.s32 	%rd79, %r74, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.f32 	%f42, [%rd80];
	ld.global.f32 	%f43, [%rd78];
	mul.f32 	%f44, %f43, %f42;
	.loc	1 107 97
	add.s32 	%r77, %r28, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd81, %r77, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.f32 	%f45, [%rd82];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f44, %f45, %f57;

$L__BB1_21:
	.loc	2 125 125, function_name $L__info_string1, inlined_at 1 96 45
	add.s64 	%rd84, %rd55, 24;
	// begin inline asm
	ld.global.nc.u64 %rd83, [%rd84];
	// end inline asm
	.loc	2 124 107, function_name $L__info_string0, inlined_at 1 100 36
	add.s64 	%rd85, %rd56, 12;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd85];
	// end inline asm
	.loc	1 100 36
	add.s32 	%r30, %r78, -1;
	.loc	1 103 40
	cvt.u32.u64 	%r31, %rd83;
	.loc	1 106 17
	setp.eq.s32 	%p26, %r31, -1;
	setp.eq.s32 	%p27, %r30, 0;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	$L__BB1_23;

	.loc	1 107 33
	add.s32 	%r79, %r15, %r31;
	.loc	1 107 66
	shl.b32 	%r80, %r31, 5;
	add.s32 	%r81, %r80, %r85;
	.loc	1 111 35
	mul.wide.s32 	%rd86, %r81, 4;
	add.s64 	%rd87, %rd3, %rd86;
	mul.wide.s32 	%rd88, %r79, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.f32 	%f46, [%rd89];
	ld.global.f32 	%f47, [%rd87];
	mul.f32 	%f48, %f47, %f46;
	.loc	1 107 97
	add.s32 	%r82, %r30, %r15;
	.loc	1 115 35
	mul.wide.s32 	%rd90, %r82, 4;
	add.s64 	%rd91, %rd1, %rd90;
	ld.global.f32 	%f49, [%rd91];
	.loc	1 120 21
	fma.rn.f32 	%f57, %f48, %f49, %f57;

$L__BB1_23:
	.loc	1 94 34
	add.s32 	%r86, %r86, 4;
	.loc	1 94 13
	setp.lt.u32 	%p29, %r86, %r42;
	@%p29 bra 	$L__BB1_15;

$L__BB1_24:
	.loc	1 92 56
	add.s32 	%r83, %r15, %r2;
	.loc	1 132 27
	mul.wide.s32 	%rd92, %r83, 4;
	add.s64 	%rd93, %rd11, %rd92;
	ld.global.f32 	%f50, [%rd93];
	mul.f32 	%f51, %f57, %f50;
	.loc	1 92 25
	add.s32 	%r84, %r85, %r7;
	.loc	1 133 13
	mul.wide.s32 	%rd94, %r84, 4;
	add.s64 	%rd95, %rd10, %rd94;
	st.global.f32 	[%rd95], %f51;
	.loc	1 89 29
	add.s32 	%r85, %r85, %r8;
	.loc	1 89 9
	setp.lt.s32 	%p30, %r85, %r3;
	@%p30 bra 	$L__BB1_3;

$L__BB1_25:
	.loc	1 137 1
	ret;

}
	.file	1 "/mnt/c/Nithin stuff/Final Year Project/Organisation Repos/Seastar/benchmarking/tgcn/dynamic/./egl_kernel.cu"
	.file	2 "/usr/local/cuda-11.7/bin/../targets/x86_64-linux/include/sm_32_intrinsics.hpp"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,51,56,95,73,78,84,69,82,78,65,76,95,102,99,102,97,55,100,48,101,95,49,51,95,101,103,108,95,107,101,114,110,101,108,95,99,117
.b8 95,75,52,53,95,95,108,100,103,69,80,75,106,0
$L__info_string1:
.b8 95,90,78,51,56,95,73,78,84,69,82,78,65,76,95,102,99,102,97,55,100,48,101,95,49,51,95,101,103,108,95,107,101,114,110,101,108,95,99,117
.b8 95,75,52,53,95,95,108,100,103,69,80,75,121,0

	}
