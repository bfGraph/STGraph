//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_61
.address_size 64

	// .globl	K4

.visible .entry K4(
	.param .u64 K4_param_0,
	.param .u64 K4_param_1,
	.param .u64 K4_param_2,
	.param .u64 K4_param_3,
	.param .u64 K4_param_4,
	.param .u64 K4_param_5,
	.param .u64 K4_param_6,
	.param .u64 K4_param_7,
	.param .u32 K4_param_8,
	.param .u32 K4_param_9,
	.param .u32 K4_param_10,
	.param .u32 K4_param_11,
	.param .u32 K4_param_12
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<82>;
	.reg .b64 	%rd<95>;
	.loc	1 1 0


	ld.param.u64 	%rd26, [K4_param_0];
	ld.param.u64 	%rd21, [K4_param_1];
	ld.param.u64 	%rd27, [K4_param_2];
	ld.param.u64 	%rd28, [K4_param_3];
	ld.param.u64 	%rd22, [K4_param_4];
	ld.param.u64 	%rd23, [K4_param_5];
	ld.param.u64 	%rd24, [K4_param_6];
	ld.param.u64 	%rd25, [K4_param_7];
	ld.param.u32 	%r24, [K4_param_8];
	ld.param.u32 	%r21, [K4_param_9];
	ld.param.u32 	%r22, [K4_param_10];
	ld.param.u32 	%r23, [K4_param_11];
	ld.param.u32 	%r25, [K4_param_12];
	.loc	1 12 16
	cvta.to.global.u64 	%rd1, %rd28;
	cvta.to.global.u64 	%rd2, %rd26;
	cvta.to.global.u64 	%rd3, %rd27;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r27, %r1, %r23;
	mad.lo.s32 	%r2, %r26, %r25, %r27;
	.loc	1 14 5
	setp.ge.s32 	%p1, %r2, %r24;
	@%p1 bra 	$L__BB0_12;

	.loc	1 16 22
	mul.lo.s32 	%r3, %r22, %r21;
	.loc	1 17 17
	mul.wide.s32 	%rd31, %r2, 4;
	add.s64 	%rd29, %rd23, %rd31;
	.loc	1 17 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 17 19
	// begin inline asm
	ld.global.nc.s32 %r28, [%rd29];
	// end inline asm
	.loc	1 18 17
	add.s64 	%rd30, %rd29, 4;
	.loc	1 18 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 18 19
	// begin inline asm
	ld.global.nc.s32 %r29, [%rd30];
	// end inline asm
	.loc	1 19 16
	rem.u32 	%r79, %r1, %r23;
	.loc	1 21 9
	setp.ge.s32 	%p2, %r79, %r3;
	@%p2 bra 	$L__BB0_12;

	.loc	1 0 9
	shl.b32 	%r7, %r2, 5;
	.loc	1 21 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 26 13
	not.b32 	%r30, %r28;
	add.s32 	%r9, %r29, %r30;
	sub.s32 	%r31, %r29, %r28;
	and.b32  	%r10, %r31, 3;
	mul.wide.s32 	%rd32, %r28, 4;
	add.s64 	%rd4, %rd25, %rd32;
	add.s64 	%rd5, %rd24, %rd32;
	add.s32 	%r11, %r28, 1;
	add.s64 	%rd6, %rd4, 4;
	add.s64 	%rd7, %rd5, 4;
	add.s32 	%r12, %r28, 2;
	add.s64 	%rd8, %rd4, 8;
	add.s64 	%rd9, %rd5, 8;
	add.s32 	%r13, %r28, 3;
	add.s64 	%rd10, %rd24, 12;
	add.s64 	%rd11, %rd24, 8;
	add.s64 	%rd12, %rd24, 4;
	add.s64 	%rd13, %rd25, 12;
	add.s64 	%rd14, %rd25, 8;
	add.s64 	%rd15, %rd25, 4;
	.loc	1 12 16
	cvta.to.global.u64 	%rd16, %rd22;
	cvta.to.global.u64 	%rd17, %rd21;
	setp.le.s32 	%p3, %r29, %r28;
	mov.f32 	%f9, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p7, %r9, 3;
	setp.eq.s32 	%p5, %r10, 1;

$L__BB0_3:
	.loc	1 24 56
	shr.s32 	%r32, %r79, 31;
	shr.u32 	%r33, %r32, 27;
	add.s32 	%r34, %r79, %r33;
	shr.s32 	%r15, %r34, 5;
	.loc	1 26 13
	mov.f32 	%f48, %f9;
	@%p3 bra 	$L__BB0_11;

	.loc	1 0 13
	add.s32 	%r16, %r15, -1;
	.loc	1 26 13
	mov.u32 	%r80, %r28;
	mov.f32 	%f48, %f9;
	@%p4 bra 	$L__BB0_8;

	.loc	1 28 30
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r35, [%rd4];
	// end inline asm
	.loc	1 32 27
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	// begin inline asm
	ld.global.nc.s32 %r36, [%rd5];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r37, %r35, %r15;
	.loc	1 34 62
	shl.b32 	%r38, %r35, 5;
	add.s32 	%r39, %r38, %r79;
	.loc	1 34 93
	add.s32 	%r40, %r16, %r36;
	.loc	1 38 31
	mul.wide.s32 	%rd35, %r37, 4;
	add.s64 	%rd36, %rd3, %rd35;
	mul.wide.s32 	%rd37, %r39, 4;
	add.s64 	%rd38, %rd2, %rd37;
	ld.global.f32 	%f12, [%rd38];
	ld.global.f32 	%f13, [%rd36];
	mul.f32 	%f14, %f13, %f12;
	.loc	1 42 31
	mul.wide.s32 	%rd39, %r40, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.f32 	%f15, [%rd40];
	.loc	1 47 17
	fma.rn.f32 	%f48, %f14, %f15, 0f00000000;
	.loc	1 26 13
	mov.u32 	%r80, %r11;
	@%p5 bra 	$L__BB0_8;

	.loc	1 0 13
	setp.eq.s32 	%p6, %r10, 2;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r41, [%rd6];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	// begin inline asm
	ld.global.nc.s32 %r42, [%rd7];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r43, %r41, %r15;
	.loc	1 34 62
	shl.b32 	%r44, %r41, 5;
	add.s32 	%r45, %r44, %r79;
	.loc	1 34 93
	add.s32 	%r46, %r16, %r42;
	.loc	1 38 31
	mul.wide.s32 	%rd43, %r43, 4;
	add.s64 	%rd44, %rd3, %rd43;
	mul.wide.s32 	%rd45, %r45, 4;
	add.s64 	%rd46, %rd2, %rd45;
	ld.global.f32 	%f16, [%rd46];
	ld.global.f32 	%f17, [%rd44];
	mul.f32 	%f18, %f17, %f16;
	.loc	1 42 31
	mul.wide.s32 	%rd47, %r46, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.f32 	%f19, [%rd48];
	.loc	1 47 17
	fma.rn.f32 	%f48, %f18, %f19, %f48;
	.loc	1 26 13
	mov.u32 	%r80, %r12;
	@%p6 bra 	$L__BB0_8;

	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r47, [%rd8];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	// begin inline asm
	ld.global.nc.s32 %r48, [%rd9];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r49, %r47, %r15;
	.loc	1 34 62
	shl.b32 	%r50, %r47, 5;
	add.s32 	%r51, %r50, %r79;
	.loc	1 34 93
	add.s32 	%r52, %r16, %r48;
	.loc	1 38 31
	mul.wide.s32 	%rd51, %r49, 4;
	add.s64 	%rd52, %rd3, %rd51;
	mul.wide.s32 	%rd53, %r51, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.f32 	%f20, [%rd54];
	ld.global.f32 	%f21, [%rd52];
	mul.f32 	%f22, %f21, %f20;
	.loc	1 42 31
	mul.wide.s32 	%rd55, %r52, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.f32 	%f23, [%rd56];
	.loc	1 47 17
	fma.rn.f32 	%f48, %f22, %f23, %f48;
	mov.u32 	%r80, %r13;

$L__BB0_8:
	.loc	1 26 13
	@%p7 bra 	$L__BB0_11;

	mul.wide.s32 	%rd94, %r80, 4;

$L__BB0_10:
	.loc	1 0 13
	ld.param.u64 	%rd93, [K4_param_7];
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd57, %rd93, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r53, [%rd57];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	add.s64 	%rd58, %rd24, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r54, [%rd58];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r61, %r53, %r15;
	.loc	1 34 62
	shl.b32 	%r62, %r53, 5;
	add.s32 	%r63, %r62, %r79;
	.loc	1 34 93
	add.s32 	%r64, %r16, %r54;
	.loc	1 38 31
	mul.wide.s32 	%rd65, %r61, 4;
	add.s64 	%rd66, %rd3, %rd65;
	mul.wide.s32 	%rd67, %r63, 4;
	add.s64 	%rd68, %rd2, %rd67;
	ld.global.f32 	%f24, [%rd68];
	ld.global.f32 	%f25, [%rd66];
	mul.f32 	%f26, %f25, %f24;
	.loc	1 42 31
	mul.wide.s32 	%rd69, %r64, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.global.f32 	%f27, [%rd70];
	.loc	1 47 17
	fma.rn.f32 	%f28, %f26, %f27, %f48;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd59, %rd15, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r55, [%rd59];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	add.s64 	%rd60, %rd12, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r56, [%rd60];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r65, %r55, %r15;
	.loc	1 34 62
	shl.b32 	%r66, %r55, 5;
	add.s32 	%r67, %r66, %r79;
	.loc	1 34 93
	add.s32 	%r68, %r16, %r56;
	.loc	1 38 31
	mul.wide.s32 	%rd71, %r65, 4;
	add.s64 	%rd72, %rd3, %rd71;
	mul.wide.s32 	%rd73, %r67, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.f32 	%f29, [%rd74];
	ld.global.f32 	%f30, [%rd72];
	mul.f32 	%f31, %f30, %f29;
	.loc	1 42 31
	mul.wide.s32 	%rd75, %r68, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.f32 	%f32, [%rd76];
	.loc	1 47 17
	fma.rn.f32 	%f33, %f31, %f32, %f28;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd61, %rd14, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r57, [%rd61];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	add.s64 	%rd62, %rd11, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r58, [%rd62];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r69, %r57, %r15;
	.loc	1 34 62
	shl.b32 	%r70, %r57, 5;
	add.s32 	%r71, %r70, %r79;
	.loc	1 34 93
	add.s32 	%r72, %r16, %r58;
	.loc	1 38 31
	mul.wide.s32 	%rd77, %r69, 4;
	add.s64 	%rd78, %rd3, %rd77;
	mul.wide.s32 	%rd79, %r71, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.f32 	%f34, [%rd80];
	ld.global.f32 	%f35, [%rd78];
	mul.f32 	%f36, %f35, %f34;
	.loc	1 42 31
	mul.wide.s32 	%rd81, %r72, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.f32 	%f37, [%rd82];
	.loc	1 47 17
	fma.rn.f32 	%f38, %f36, %f37, %f33;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd63, %rd13, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r59, [%rd63];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 32 27
	add.s64 	%rd64, %rd10, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r60, [%rd64];
	// end inline asm
	.loc	1 34 29
	add.s32 	%r73, %r59, %r15;
	.loc	1 34 62
	shl.b32 	%r74, %r59, 5;
	add.s32 	%r75, %r74, %r79;
	.loc	1 34 93
	add.s32 	%r76, %r16, %r60;
	.loc	1 38 31
	mul.wide.s32 	%rd83, %r73, 4;
	add.s64 	%rd84, %rd3, %rd83;
	mul.wide.s32 	%rd85, %r75, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.f32 	%f39, [%rd86];
	ld.global.f32 	%f40, [%rd84];
	mul.f32 	%f41, %f40, %f39;
	.loc	1 42 31
	mul.wide.s32 	%rd87, %r76, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.global.f32 	%f42, [%rd88];
	.loc	1 47 17
	fma.rn.f32 	%f48, %f41, %f42, %f38;
	.loc	1 26 13
	add.s64 	%rd94, %rd94, 16;
	.loc	1 26 34
	add.s32 	%r80, %r80, 4;
	.loc	1 26 13
	setp.lt.s32 	%p8, %r80, %r29;
	@%p8 bra 	$L__BB0_10;

$L__BB0_11:
	.loc	1 24 56
	add.s32 	%r77, %r15, %r2;
	.loc	1 58 27
	mul.wide.s32 	%rd89, %r77, 4;
	add.s64 	%rd90, %rd17, %rd89;
	ld.global.f32 	%f43, [%rd90];
	mul.f32 	%f44, %f48, %f43;
	.loc	1 24 25
	add.s32 	%r78, %r79, %r7;
	.loc	1 59 13
	mul.wide.s32 	%rd91, %r78, 4;
	add.s64 	%rd92, %rd16, %rd91;
	st.global.f32 	[%rd92], %f44;
	.loc	1 21 29
	add.s32 	%r79, %r79, %r8;
	.loc	1 21 9
	setp.lt.s32 	%p9, %r79, %r3;
	@%p9 bra 	$L__BB0_3;

$L__BB0_12:
	.loc	1 63 1
	ret;

}
	// .globl	K5
.visible .entry K5(
	.param .u64 K5_param_0,
	.param .u64 K5_param_1,
	.param .u64 K5_param_2,
	.param .u64 K5_param_3,
	.param .u64 K5_param_4,
	.param .u64 K5_param_5,
	.param .u64 K5_param_6,
	.param .u64 K5_param_7,
	.param .u32 K5_param_8,
	.param .u32 K5_param_9,
	.param .u32 K5_param_10,
	.param .u32 K5_param_11,
	.param .u32 K5_param_12
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<82>;
	.reg .b64 	%rd<95>;
	.loc	1 63 0


	ld.param.u64 	%rd26, [K5_param_0];
	ld.param.u64 	%rd27, [K5_param_1];
	ld.param.u64 	%rd21, [K5_param_2];
	ld.param.u64 	%rd28, [K5_param_3];
	ld.param.u64 	%rd22, [K5_param_4];
	ld.param.u64 	%rd23, [K5_param_5];
	ld.param.u64 	%rd24, [K5_param_6];
	ld.param.u64 	%rd25, [K5_param_7];
	ld.param.u32 	%r24, [K5_param_8];
	ld.param.u32 	%r21, [K5_param_9];
	ld.param.u32 	%r22, [K5_param_10];
	ld.param.u32 	%r23, [K5_param_11];
	ld.param.u32 	%r25, [K5_param_12];
	.loc	1 74 16
	cvta.to.global.u64 	%rd1, %rd28;
	cvta.to.global.u64 	%rd2, %rd27;
	cvta.to.global.u64 	%rd3, %rd26;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r27, %r1, %r23;
	mad.lo.s32 	%r2, %r26, %r25, %r27;
	.loc	1 76 5
	setp.ge.s32 	%p1, %r2, %r24;
	@%p1 bra 	$L__BB1_12;

	.loc	1 78 22
	mul.lo.s32 	%r3, %r22, %r21;
	.loc	1 79 17
	mul.wide.s32 	%rd31, %r2, 4;
	add.s64 	%rd29, %rd23, %rd31;
	.loc	1 79 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 79 19
	// begin inline asm
	ld.global.nc.s32 %r28, [%rd29];
	// end inline asm
	.loc	1 80 17
	add.s64 	%rd30, %rd29, 4;
	.loc	1 80 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 80 19
	// begin inline asm
	ld.global.nc.s32 %r29, [%rd30];
	// end inline asm
	.loc	1 81 16
	rem.u32 	%r79, %r1, %r23;
	.loc	1 83 9
	setp.ge.s32 	%p2, %r79, %r3;
	@%p2 bra 	$L__BB1_12;

	.loc	1 0 9
	shl.b32 	%r7, %r2, 5;
	.loc	1 83 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 88 13
	not.b32 	%r30, %r28;
	add.s32 	%r9, %r29, %r30;
	sub.s32 	%r31, %r29, %r28;
	and.b32  	%r10, %r31, 3;
	mul.wide.s32 	%rd32, %r28, 4;
	add.s64 	%rd4, %rd25, %rd32;
	add.s64 	%rd5, %rd24, %rd32;
	add.s32 	%r11, %r28, 1;
	add.s64 	%rd6, %rd4, 4;
	add.s64 	%rd7, %rd5, 4;
	add.s32 	%r12, %r28, 2;
	add.s64 	%rd8, %rd4, 8;
	add.s64 	%rd9, %rd5, 8;
	add.s32 	%r13, %r28, 3;
	add.s64 	%rd10, %rd24, 12;
	add.s64 	%rd11, %rd24, 8;
	add.s64 	%rd12, %rd24, 4;
	add.s64 	%rd13, %rd25, 12;
	add.s64 	%rd14, %rd25, 8;
	add.s64 	%rd15, %rd25, 4;
	.loc	1 74 16
	cvta.to.global.u64 	%rd16, %rd22;
	cvta.to.global.u64 	%rd17, %rd21;
	setp.le.s32 	%p3, %r29, %r28;
	mov.f32 	%f9, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p7, %r9, 3;
	setp.eq.s32 	%p5, %r10, 1;

$L__BB1_3:
	.loc	1 86 25
	shr.s32 	%r32, %r79, 31;
	shr.u32 	%r33, %r32, 27;
	add.s32 	%r34, %r79, %r33;
	shr.s32 	%r15, %r34, 5;
	.loc	1 88 13
	mov.f32 	%f48, %f9;
	@%p3 bra 	$L__BB1_11;

	.loc	1 0 13
	add.s32 	%r16, %r15, -1;
	.loc	1 88 13
	mov.u32 	%r80, %r28;
	mov.f32 	%f48, %f9;
	@%p4 bra 	$L__BB1_8;

	.loc	1 90 30
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	// begin inline asm
	ld.global.nc.s32 %r35, [%rd4];
	// end inline asm
	.loc	1 94 27
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	// begin inline asm
	ld.global.nc.s32 %r36, [%rd5];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r37, %r35, 5;
	add.s32 	%r38, %r37, %r79;
	.loc	1 96 60
	add.s32 	%r39, %r35, %r15;
	.loc	1 96 93
	add.s32 	%r40, %r16, %r36;
	.loc	1 100 31
	mul.wide.s32 	%rd35, %r38, 4;
	add.s64 	%rd36, %rd3, %rd35;
	mul.wide.s32 	%rd37, %r39, 4;
	add.s64 	%rd38, %rd2, %rd37;
	ld.global.f32 	%f12, [%rd38];
	ld.global.f32 	%f13, [%rd36];
	mul.f32 	%f14, %f13, %f12;
	.loc	1 104 31
	mul.wide.s32 	%rd39, %r40, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.f32 	%f15, [%rd40];
	.loc	1 109 17
	fma.rn.f32 	%f48, %f14, %f15, 0f00000000;
	.loc	1 88 13
	mov.u32 	%r80, %r11;
	@%p5 bra 	$L__BB1_8;

	.loc	1 0 13
	setp.eq.s32 	%p6, %r10, 2;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	// begin inline asm
	ld.global.nc.s32 %r41, [%rd6];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	// begin inline asm
	ld.global.nc.s32 %r42, [%rd7];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r43, %r41, 5;
	add.s32 	%r44, %r43, %r79;
	.loc	1 96 60
	add.s32 	%r45, %r41, %r15;
	.loc	1 96 93
	add.s32 	%r46, %r16, %r42;
	.loc	1 100 31
	mul.wide.s32 	%rd43, %r44, 4;
	add.s64 	%rd44, %rd3, %rd43;
	mul.wide.s32 	%rd45, %r45, 4;
	add.s64 	%rd46, %rd2, %rd45;
	ld.global.f32 	%f16, [%rd46];
	ld.global.f32 	%f17, [%rd44];
	mul.f32 	%f18, %f17, %f16;
	.loc	1 104 31
	mul.wide.s32 	%rd47, %r46, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.f32 	%f19, [%rd48];
	.loc	1 109 17
	fma.rn.f32 	%f48, %f18, %f19, %f48;
	.loc	1 88 13
	mov.u32 	%r80, %r12;
	@%p6 bra 	$L__BB1_8;

	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	// begin inline asm
	ld.global.nc.s32 %r47, [%rd8];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	// begin inline asm
	ld.global.nc.s32 %r48, [%rd9];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r49, %r47, 5;
	add.s32 	%r50, %r49, %r79;
	.loc	1 96 60
	add.s32 	%r51, %r47, %r15;
	.loc	1 96 93
	add.s32 	%r52, %r16, %r48;
	.loc	1 100 31
	mul.wide.s32 	%rd51, %r50, 4;
	add.s64 	%rd52, %rd3, %rd51;
	mul.wide.s32 	%rd53, %r51, 4;
	add.s64 	%rd54, %rd2, %rd53;
	ld.global.f32 	%f20, [%rd54];
	ld.global.f32 	%f21, [%rd52];
	mul.f32 	%f22, %f21, %f20;
	.loc	1 104 31
	mul.wide.s32 	%rd55, %r52, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.f32 	%f23, [%rd56];
	.loc	1 109 17
	fma.rn.f32 	%f48, %f22, %f23, %f48;
	mov.u32 	%r80, %r13;

$L__BB1_8:
	.loc	1 88 13
	@%p7 bra 	$L__BB1_11;

	mul.wide.s32 	%rd94, %r80, 4;

$L__BB1_10:
	.loc	1 0 13
	ld.param.u64 	%rd93, [K5_param_7];
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	add.s64 	%rd57, %rd93, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r53, [%rd57];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	add.s64 	%rd58, %rd24, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r54, [%rd58];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r61, %r53, 5;
	add.s32 	%r62, %r61, %r79;
	.loc	1 96 60
	add.s32 	%r63, %r53, %r15;
	.loc	1 96 93
	add.s32 	%r64, %r16, %r54;
	.loc	1 100 31
	mul.wide.s32 	%rd65, %r62, 4;
	add.s64 	%rd66, %rd3, %rd65;
	mul.wide.s32 	%rd67, %r63, 4;
	add.s64 	%rd68, %rd2, %rd67;
	ld.global.f32 	%f24, [%rd68];
	ld.global.f32 	%f25, [%rd66];
	mul.f32 	%f26, %f25, %f24;
	.loc	1 104 31
	mul.wide.s32 	%rd69, %r64, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.global.f32 	%f27, [%rd70];
	.loc	1 109 17
	fma.rn.f32 	%f28, %f26, %f27, %f48;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	add.s64 	%rd59, %rd15, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r55, [%rd59];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	add.s64 	%rd60, %rd12, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r56, [%rd60];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r65, %r55, 5;
	add.s32 	%r66, %r65, %r79;
	.loc	1 96 60
	add.s32 	%r67, %r55, %r15;
	.loc	1 96 93
	add.s32 	%r68, %r16, %r56;
	.loc	1 100 31
	mul.wide.s32 	%rd71, %r66, 4;
	add.s64 	%rd72, %rd3, %rd71;
	mul.wide.s32 	%rd73, %r67, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.f32 	%f29, [%rd74];
	ld.global.f32 	%f30, [%rd72];
	mul.f32 	%f31, %f30, %f29;
	.loc	1 104 31
	mul.wide.s32 	%rd75, %r68, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.f32 	%f32, [%rd76];
	.loc	1 109 17
	fma.rn.f32 	%f33, %f31, %f32, %f28;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	add.s64 	%rd61, %rd14, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r57, [%rd61];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	add.s64 	%rd62, %rd11, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r58, [%rd62];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r69, %r57, 5;
	add.s32 	%r70, %r69, %r79;
	.loc	1 96 60
	add.s32 	%r71, %r57, %r15;
	.loc	1 96 93
	add.s32 	%r72, %r16, %r58;
	.loc	1 100 31
	mul.wide.s32 	%rd77, %r70, 4;
	add.s64 	%rd78, %rd3, %rd77;
	mul.wide.s32 	%rd79, %r71, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.f32 	%f34, [%rd80];
	ld.global.f32 	%f35, [%rd78];
	mul.f32 	%f36, %f35, %f34;
	.loc	1 104 31
	mul.wide.s32 	%rd81, %r72, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.global.f32 	%f37, [%rd82];
	.loc	1 109 17
	fma.rn.f32 	%f38, %f36, %f37, %f33;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 90 30
	add.s64 	%rd63, %rd13, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r59, [%rd63];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 94 27
	add.s64 	%rd64, %rd10, %rd94;
	// begin inline asm
	ld.global.nc.s32 %r60, [%rd64];
	// end inline asm
	.loc	1 96 29
	shl.b32 	%r73, %r59, 5;
	add.s32 	%r74, %r73, %r79;
	.loc	1 96 60
	add.s32 	%r75, %r59, %r15;
	.loc	1 96 93
	add.s32 	%r76, %r16, %r60;
	.loc	1 100 31
	mul.wide.s32 	%rd83, %r74, 4;
	add.s64 	%rd84, %rd3, %rd83;
	mul.wide.s32 	%rd85, %r75, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.f32 	%f39, [%rd86];
	ld.global.f32 	%f40, [%rd84];
	mul.f32 	%f41, %f40, %f39;
	.loc	1 104 31
	mul.wide.s32 	%rd87, %r76, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.global.f32 	%f42, [%rd88];
	.loc	1 109 17
	fma.rn.f32 	%f48, %f41, %f42, %f38;
	.loc	1 88 13
	add.s64 	%rd94, %rd94, 16;
	.loc	1 88 34
	add.s32 	%r80, %r80, 4;
	.loc	1 88 13
	setp.lt.s32 	%p8, %r80, %r29;
	@%p8 bra 	$L__BB1_10;

$L__BB1_11:
	.loc	1 86 25
	add.s32 	%r77, %r15, %r2;
	.loc	1 120 27
	mul.wide.s32 	%rd89, %r77, 4;
	add.s64 	%rd90, %rd17, %rd89;
	ld.global.f32 	%f43, [%rd90];
	mul.f32 	%f44, %f48, %f43;
	.loc	1 86 58
	add.s32 	%r78, %r79, %r7;
	.loc	1 121 13
	mul.wide.s32 	%rd91, %r78, 4;
	add.s64 	%rd92, %rd16, %rd91;
	st.global.f32 	[%rd92], %f44;
	.loc	1 83 29
	add.s32 	%r79, %r79, %r8;
	.loc	1 83 9
	setp.lt.s32 	%p9, %r79, %r3;
	@%p9 bra 	$L__BB1_3;

$L__BB1_12:
	.loc	1 125 1
	ret;

}
	.file	1 "/mnt/c/Nithin stuff/Final Year Project/Organisation Repos/Seastar/benchmarking/tgcn/dynamic/./egl_kernel.cu"
	.file	2 "/usr/local/cuda-11.7/bin/../targets/x86_64-linux/include/sm_32_intrinsics.hpp"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,51,56,95,73,78,84,69,82,78,65,76,95,102,99,102,97,55,100,48,101,95,49,51,95,101,103,108,95,107,101,114,110,101,108,95,99,117
.b8 95,75,52,53,95,95,108,100,103,69,80,75,105,0

	}
