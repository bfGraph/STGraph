//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_61
.address_size 64

	// .globl	K2

.visible .entry K2(
	.param .u64 K2_param_0,
	.param .u64 K2_param_1,
	.param .u64 K2_param_2,
	.param .u64 K2_param_3,
	.param .u64 K2_param_4,
	.param .u64 K2_param_5,
	.param .u64 K2_param_6,
	.param .u32 K2_param_7,
	.param .u32 K2_param_8,
	.param .u32 K2_param_9,
	.param .u32 K2_param_10,
	.param .u32 K2_param_11
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<68>;
	.reg .b64 	%rd<78>;
	.loc	1 1 0


	ld.param.u64 	%rd25, [K2_param_0];
	ld.param.u64 	%rd20, [K2_param_1];
	ld.param.u64 	%rd26, [K2_param_2];
	ld.param.u64 	%rd21, [K2_param_3];
	ld.param.u64 	%rd22, [K2_param_4];
	ld.param.u64 	%rd23, [K2_param_5];
	ld.param.u64 	%rd24, [K2_param_6];
	ld.param.u32 	%r23, [K2_param_7];
	ld.param.u32 	%r20, [K2_param_8];
	ld.param.u32 	%r21, [K2_param_9];
	ld.param.u32 	%r22, [K2_param_10];
	ld.param.u32 	%r24, [K2_param_11];
	.loc	1 12 16
	cvta.to.global.u64 	%rd1, %rd26;
	cvta.to.global.u64 	%rd2, %rd25;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r26, %r1, %r22;
	mad.lo.s32 	%r2, %r25, %r24, %r26;
	.loc	1 14 5
	setp.ge.s32 	%p1, %r2, %r23;
	@%p1 bra 	$L__BB0_12;

	.loc	1 16 22
	mul.lo.s32 	%r3, %r21, %r20;
	.loc	1 17 17
	mul.wide.s32 	%rd29, %r2, 4;
	add.s64 	%rd27, %rd22, %rd29;
	.loc	1 17 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 17 19
	// begin inline asm
	ld.global.nc.s32 %r27, [%rd27];
	// end inline asm
	.loc	1 18 17
	add.s64 	%rd28, %rd27, 4;
	.loc	1 18 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 18 19
	// begin inline asm
	ld.global.nc.s32 %r28, [%rd28];
	// end inline asm
	.loc	1 19 16
	rem.u32 	%r65, %r1, %r22;
	.loc	1 21 9
	setp.ge.s32 	%p2, %r65, %r3;
	@%p2 bra 	$L__BB0_12;

	.loc	1 0 9
	mul.lo.s32 	%r7, %r2, 7;
	.loc	1 21 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 26 13
	not.b32 	%r29, %r27;
	add.s32 	%r9, %r28, %r29;
	sub.s32 	%r30, %r28, %r27;
	and.b32  	%r10, %r30, 3;
	mul.wide.s32 	%rd30, %r27, 4;
	add.s64 	%rd3, %rd24, %rd30;
	add.s64 	%rd4, %rd23, %rd30;
	add.s32 	%r11, %r27, 1;
	add.s64 	%rd5, %rd3, 4;
	add.s64 	%rd6, %rd4, 4;
	add.s32 	%r12, %r27, 2;
	add.s64 	%rd7, %rd3, 8;
	add.s64 	%rd8, %rd4, 8;
	add.s32 	%r13, %r27, 3;
	add.s64 	%rd9, %rd23, 12;
	add.s64 	%rd10, %rd23, 8;
	add.s64 	%rd11, %rd23, 4;
	add.s64 	%rd12, %rd24, 12;
	add.s64 	%rd13, %rd24, 8;
	add.s64 	%rd14, %rd24, 4;
	.loc	1 12 16
	cvta.to.global.u64 	%rd15, %rd21;
	cvta.to.global.u64 	%rd16, %rd20;
	setp.le.s32 	%p3, %r28, %r27;
	mov.f32 	%f9, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p7, %r9, 3;
	setp.eq.s32 	%p5, %r10, 1;

$L__BB0_3:
	.loc	1 24 25
	mul.hi.s32 	%r31, %r65, -1840700269;
	add.s32 	%r32, %r31, %r65;
	shr.u32 	%r33, %r32, 31;
	shr.s32 	%r34, %r32, 2;
	add.s32 	%r15, %r34, %r33;
	.loc	1 26 13
	mov.f32 	%f34, %f9;
	@%p3 bra 	$L__BB0_11;

	mov.u32 	%r66, %r27;
	mov.f32 	%f34, %f9;
	@%p4 bra 	$L__BB0_8;

	.loc	1 28 30
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r35, [%rd3];
	// end inline asm
	.loc	1 29 27
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	// begin inline asm
	ld.global.nc.s32 %r36, [%rd4];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r37, %r35, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r38, %r35, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd33, %r38, 4;
	add.s64 	%rd34, %rd2, %rd33;
	mul.wide.s32 	%rd35, %r37, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.global.f32 	%f12, [%rd36];
	ld.global.f32 	%f13, [%rd34];
	.loc	1 40 17
	fma.rn.f32 	%f34, %f13, %f12, 0f00000000;
	.loc	1 26 13
	mov.u32 	%r66, %r11;
	@%p5 bra 	$L__BB0_8;

	.loc	1 0 13
	setp.eq.s32 	%p6, %r10, 2;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r39, [%rd5];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	// begin inline asm
	ld.global.nc.s32 %r40, [%rd6];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r41, %r39, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r42, %r39, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd39, %r42, 4;
	add.s64 	%rd40, %rd2, %rd39;
	mul.wide.s32 	%rd41, %r41, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.f32 	%f14, [%rd42];
	ld.global.f32 	%f15, [%rd40];
	.loc	1 40 17
	fma.rn.f32 	%f34, %f15, %f14, %f34;
	.loc	1 26 13
	mov.u32 	%r66, %r12;
	@%p6 bra 	$L__BB0_8;

	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	// begin inline asm
	ld.global.nc.s32 %r43, [%rd7];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	// begin inline asm
	ld.global.nc.s32 %r44, [%rd8];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r45, %r43, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r46, %r43, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd45, %r46, 4;
	add.s64 	%rd46, %rd2, %rd45;
	mul.wide.s32 	%rd47, %r45, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.f32 	%f16, [%rd48];
	ld.global.f32 	%f17, [%rd46];
	.loc	1 40 17
	fma.rn.f32 	%f34, %f17, %f16, %f34;
	mov.u32 	%r66, %r13;

$L__BB0_8:
	.loc	1 26 13
	@%p7 bra 	$L__BB0_11;

	mul.wide.s32 	%rd77, %r66, 4;

$L__BB0_10:
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd49, %rd24, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r47, [%rd49];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	add.s64 	%rd50, %rd23, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r48, [%rd50];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r55, %r47, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r56, %r47, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd57, %r56, 4;
	add.s64 	%rd58, %rd2, %rd57;
	mul.wide.s32 	%rd59, %r55, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.global.f32 	%f18, [%rd60];
	ld.global.f32 	%f19, [%rd58];
	.loc	1 40 17
	fma.rn.f32 	%f20, %f19, %f18, %f34;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd51, %rd14, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r49, [%rd51];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	add.s64 	%rd52, %rd11, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r50, [%rd52];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r57, %r49, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r58, %r49, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd61, %r58, 4;
	add.s64 	%rd62, %rd2, %rd61;
	mul.wide.s32 	%rd63, %r57, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.f32 	%f21, [%rd64];
	ld.global.f32 	%f22, [%rd62];
	.loc	1 40 17
	fma.rn.f32 	%f23, %f22, %f21, %f20;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd53, %rd13, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r51, [%rd53];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	add.s64 	%rd54, %rd10, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r52, [%rd54];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r59, %r51, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r60, %r51, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd65, %r60, 4;
	add.s64 	%rd66, %rd2, %rd65;
	mul.wide.s32 	%rd67, %r59, 4;
	add.s64 	%rd68, %rd1, %rd67;
	ld.global.f32 	%f24, [%rd68];
	ld.global.f32 	%f25, [%rd66];
	.loc	1 40 17
	fma.rn.f32 	%f26, %f25, %f24, %f23;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 28 30
	add.s64 	%rd55, %rd12, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r53, [%rd55];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 29 27
	add.s64 	%rd56, %rd9, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r54, [%rd56];
	// end inline asm
	.loc	1 31 29
	add.s32 	%r61, %r53, %r15;
	.loc	1 31 61
	mad.lo.s32 	%r62, %r53, 7, %r65;
	.loc	1 35 30
	mul.wide.s32 	%rd69, %r62, 4;
	add.s64 	%rd70, %rd2, %rd69;
	mul.wide.s32 	%rd71, %r61, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.f32 	%f27, [%rd72];
	ld.global.f32 	%f28, [%rd70];
	.loc	1 40 17
	fma.rn.f32 	%f34, %f28, %f27, %f26;
	.loc	1 26 13
	add.s64 	%rd77, %rd77, 16;
	.loc	1 26 34
	add.s32 	%r66, %r66, 4;
	.loc	1 26 13
	setp.lt.s32 	%p8, %r66, %r28;
	@%p8 bra 	$L__BB0_10;

$L__BB0_11:
	.loc	1 24 25
	add.s32 	%r63, %r15, %r2;
	.loc	1 51 27
	mul.wide.s32 	%rd73, %r63, 4;
	add.s64 	%rd74, %rd16, %rd73;
	ld.global.f32 	%f29, [%rd74];
	mul.f32 	%f30, %f34, %f29;
	.loc	1 24 57
	add.s32 	%r64, %r65, %r7;
	.loc	1 52 13
	mul.wide.s32 	%rd75, %r64, 4;
	add.s64 	%rd76, %rd15, %rd75;
	st.global.f32 	[%rd76], %f30;
	.loc	1 21 29
	add.s32 	%r65, %r65, %r8;
	.loc	1 21 9
	setp.lt.s32 	%p9, %r65, %r3;
	@%p9 bra 	$L__BB0_3;

$L__BB0_12:
	.loc	1 56 1
	ret;

}
	// .globl	K3
.visible .entry K3(
	.param .u64 K3_param_0,
	.param .u64 K3_param_1,
	.param .u64 K3_param_2,
	.param .u64 K3_param_3,
	.param .u64 K3_param_4,
	.param .u64 K3_param_5,
	.param .u64 K3_param_6,
	.param .u32 K3_param_7,
	.param .u32 K3_param_8,
	.param .u32 K3_param_9,
	.param .u32 K3_param_10,
	.param .u32 K3_param_11
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<68>;
	.reg .b64 	%rd<78>;
	.loc	1 56 0


	ld.param.u64 	%rd25, [K3_param_0];
	ld.param.u64 	%rd26, [K3_param_1];
	ld.param.u64 	%rd20, [K3_param_2];
	ld.param.u64 	%rd21, [K3_param_3];
	ld.param.u64 	%rd22, [K3_param_4];
	ld.param.u64 	%rd23, [K3_param_5];
	ld.param.u64 	%rd24, [K3_param_6];
	ld.param.u32 	%r23, [K3_param_7];
	ld.param.u32 	%r20, [K3_param_8];
	ld.param.u32 	%r21, [K3_param_9];
	ld.param.u32 	%r22, [K3_param_10];
	ld.param.u32 	%r24, [K3_param_11];
	.loc	1 67 16
	cvta.to.global.u64 	%rd1, %rd26;
	cvta.to.global.u64 	%rd2, %rd25;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	div.u32 	%r26, %r1, %r22;
	mad.lo.s32 	%r2, %r25, %r24, %r26;
	.loc	1 69 5
	setp.ge.s32 	%p1, %r2, %r23;
	@%p1 bra 	$L__BB1_12;

	.loc	1 71 22
	mul.lo.s32 	%r3, %r21, %r20;
	.loc	1 72 17
	mul.wide.s32 	%rd29, %r2, 4;
	add.s64 	%rd27, %rd22, %rd29;
	.loc	1 72 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 72 19
	// begin inline asm
	ld.global.nc.s32 %r27, [%rd27];
	// end inline asm
	.loc	1 73 17
	add.s64 	%rd28, %rd27, 4;
	.loc	1 73 19
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 73 19
	// begin inline asm
	ld.global.nc.s32 %r28, [%rd28];
	// end inline asm
	.loc	1 74 16
	rem.u32 	%r65, %r1, %r22;
	.loc	1 76 9
	setp.ge.s32 	%p2, %r65, %r3;
	@%p2 bra 	$L__BB1_12;

	.loc	1 0 9
	mul.lo.s32 	%r7, %r2, 7;
	.loc	1 76 29
	mov.u32 	%r8, %ntid.x;
	.loc	1 81 13
	not.b32 	%r29, %r27;
	add.s32 	%r9, %r28, %r29;
	sub.s32 	%r30, %r28, %r27;
	and.b32  	%r10, %r30, 3;
	mul.wide.s32 	%rd30, %r27, 4;
	add.s64 	%rd3, %rd24, %rd30;
	add.s64 	%rd4, %rd23, %rd30;
	add.s32 	%r11, %r27, 1;
	add.s64 	%rd5, %rd3, 4;
	add.s64 	%rd6, %rd4, 4;
	add.s32 	%r12, %r27, 2;
	add.s64 	%rd7, %rd3, 8;
	add.s64 	%rd8, %rd4, 8;
	add.s32 	%r13, %r27, 3;
	add.s64 	%rd9, %rd23, 12;
	add.s64 	%rd10, %rd23, 8;
	add.s64 	%rd11, %rd23, 4;
	add.s64 	%rd12, %rd24, 12;
	add.s64 	%rd13, %rd24, 8;
	add.s64 	%rd14, %rd24, 4;
	.loc	1 67 16
	cvta.to.global.u64 	%rd15, %rd21;
	cvta.to.global.u64 	%rd16, %rd20;
	setp.le.s32 	%p3, %r28, %r27;
	mov.f32 	%f9, 0f00000000;
	setp.eq.s32 	%p4, %r10, 0;
	setp.lt.u32 	%p7, %r9, 3;
	setp.eq.s32 	%p5, %r10, 1;

$L__BB1_3:
	.loc	1 79 25
	mul.hi.s32 	%r31, %r65, -1840700269;
	add.s32 	%r32, %r31, %r65;
	shr.u32 	%r33, %r32, 31;
	shr.s32 	%r34, %r32, 2;
	add.s32 	%r15, %r34, %r33;
	.loc	1 81 13
	mov.f32 	%f34, %f9;
	@%p3 bra 	$L__BB1_11;

	mov.u32 	%r66, %r27;
	mov.f32 	%f34, %f9;
	@%p4 bra 	$L__BB1_8;

	.loc	1 83 30
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	// begin inline asm
	ld.global.nc.s32 %r35, [%rd3];
	// end inline asm
	.loc	1 84 27
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	// begin inline asm
	ld.global.nc.s32 %r36, [%rd4];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r37, %r35, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r38, %r35, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd33, %r38, 4;
	add.s64 	%rd34, %rd2, %rd33;
	mul.wide.s32 	%rd35, %r37, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.global.f32 	%f12, [%rd36];
	ld.global.f32 	%f13, [%rd34];
	.loc	1 95 17
	fma.rn.f32 	%f34, %f13, %f12, 0f00000000;
	.loc	1 81 13
	mov.u32 	%r66, %r11;
	@%p5 bra 	$L__BB1_8;

	.loc	1 0 13
	setp.eq.s32 	%p6, %r10, 2;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	// begin inline asm
	ld.global.nc.s32 %r39, [%rd5];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	// begin inline asm
	ld.global.nc.s32 %r40, [%rd6];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r41, %r39, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r42, %r39, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd39, %r42, 4;
	add.s64 	%rd40, %rd2, %rd39;
	mul.wide.s32 	%rd41, %r41, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.global.f32 	%f14, [%rd42];
	ld.global.f32 	%f15, [%rd40];
	.loc	1 95 17
	fma.rn.f32 	%f34, %f15, %f14, %f34;
	.loc	1 81 13
	mov.u32 	%r66, %r12;
	@%p6 bra 	$L__BB1_8;

	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	// begin inline asm
	ld.global.nc.s32 %r43, [%rd7];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	// begin inline asm
	ld.global.nc.s32 %r44, [%rd8];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r45, %r43, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r46, %r43, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd45, %r46, 4;
	add.s64 	%rd46, %rd2, %rd45;
	mul.wide.s32 	%rd47, %r45, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.global.f32 	%f16, [%rd48];
	ld.global.f32 	%f17, [%rd46];
	.loc	1 95 17
	fma.rn.f32 	%f34, %f17, %f16, %f34;
	mov.u32 	%r66, %r13;

$L__BB1_8:
	.loc	1 81 13
	@%p7 bra 	$L__BB1_11;

	mul.wide.s32 	%rd77, %r66, 4;

$L__BB1_10:
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	add.s64 	%rd49, %rd24, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r47, [%rd49];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	add.s64 	%rd50, %rd23, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r48, [%rd50];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r55, %r47, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r56, %r47, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd57, %r56, 4;
	add.s64 	%rd58, %rd2, %rd57;
	mul.wide.s32 	%rd59, %r55, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.global.f32 	%f18, [%rd60];
	ld.global.f32 	%f19, [%rd58];
	.loc	1 95 17
	fma.rn.f32 	%f20, %f19, %f18, %f34;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	add.s64 	%rd51, %rd14, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r49, [%rd51];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	add.s64 	%rd52, %rd11, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r50, [%rd52];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r57, %r49, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r58, %r49, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd61, %r58, 4;
	add.s64 	%rd62, %rd2, %rd61;
	mul.wide.s32 	%rd63, %r57, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.global.f32 	%f21, [%rd64];
	ld.global.f32 	%f22, [%rd62];
	.loc	1 95 17
	fma.rn.f32 	%f23, %f22, %f21, %f20;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	add.s64 	%rd53, %rd13, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r51, [%rd53];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	add.s64 	%rd54, %rd10, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r52, [%rd54];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r59, %r51, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r60, %r51, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd65, %r60, 4;
	add.s64 	%rd66, %rd2, %rd65;
	mul.wide.s32 	%rd67, %r59, 4;
	add.s64 	%rd68, %rd1, %rd67;
	ld.global.f32 	%f24, [%rd68];
	ld.global.f32 	%f25, [%rd66];
	.loc	1 95 17
	fma.rn.f32 	%f26, %f25, %f24, %f23;
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 83 30
	add.s64 	%rd55, %rd12, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r53, [%rd55];
	// end inline asm
	.loc	2 112 89, function_name $L__info_string0, inlined_at 1 84 27
	add.s64 	%rd56, %rd9, %rd77;
	// begin inline asm
	ld.global.nc.s32 %r54, [%rd56];
	// end inline asm
	.loc	1 86 29
	add.s32 	%r61, %r53, %r15;
	.loc	1 86 61
	mad.lo.s32 	%r62, %r53, 7, %r65;
	.loc	1 90 31
	mul.wide.s32 	%rd69, %r62, 4;
	add.s64 	%rd70, %rd2, %rd69;
	mul.wide.s32 	%rd71, %r61, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.f32 	%f27, [%rd72];
	ld.global.f32 	%f28, [%rd70];
	.loc	1 95 17
	fma.rn.f32 	%f34, %f28, %f27, %f26;
	.loc	1 81 13
	add.s64 	%rd77, %rd77, 16;
	.loc	1 81 34
	add.s32 	%r66, %r66, 4;
	.loc	1 81 13
	setp.lt.s32 	%p8, %r66, %r28;
	@%p8 bra 	$L__BB1_10;

$L__BB1_11:
	.loc	1 79 25
	add.s32 	%r63, %r15, %r2;
	.loc	1 106 27
	mul.wide.s32 	%rd73, %r63, 4;
	add.s64 	%rd74, %rd16, %rd73;
	ld.global.f32 	%f29, [%rd74];
	mul.f32 	%f30, %f34, %f29;
	.loc	1 79 57
	add.s32 	%r64, %r65, %r7;
	.loc	1 107 13
	mul.wide.s32 	%rd75, %r64, 4;
	add.s64 	%rd76, %rd15, %rd75;
	st.global.f32 	[%rd76], %f30;
	.loc	1 76 29
	add.s32 	%r65, %r65, %r8;
	.loc	1 76 9
	setp.lt.s32 	%p9, %r65, %r3;
	@%p9 bra 	$L__BB1_3;

$L__BB1_12:
	.loc	1 111 1
	ret;

}
	.file	1 "/mnt/c/Nithin stuff/Final Year Project/Organisation Repos/Seastar/benchmarking/gcn/seastar/./egl_kernel.cu"
	.file	2 "/usr/local/cuda-11.7/bin/../targets/x86_64-linux/include/sm_32_intrinsics.hpp"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,51,56,95,73,78,84,69,82,78,65,76,95,50,50,101,53,102,48,98,102,95,49,51,95,101,103,108,95,107,101,114,110,101,108,95,99,117
.b8 95,75,50,53,95,95,108,100,103,69,80,75,105,0

	}
